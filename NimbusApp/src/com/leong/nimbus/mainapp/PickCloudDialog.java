/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.leong.nimbus.mainapp;

import com.leong.nimbus.clouds.google.drive.GDriveDialog;
import com.leong.nimbus.gui.AbstractJDialog;
import com.leong.nimbus.utils.Tools;
import java.awt.Component;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.awt.event.WindowStateListener;
import java.util.LinkedList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JDialog;

/**
 *
 * @author henry
 */
public class PickCloudDialog extends AbstractJDialog
{
    private List<JDialog> m_dialogs = new LinkedList<>();

    /**
     * Creates new form PickCloudDialog
     */
    public PickCloudDialog()
    {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        pnlClouds = new javax.swing.JPanel();
        btnGoogleDrive = new javax.swing.JButton();
        btnGoogleDrive.setIcon(new ImageIcon(getClass().getClassLoader().getResource("resources/icons/google/drive-32.png")));

        setTitle("Clouds");
        setMaximumSize(new java.awt.Dimension(400, 300));
        setMinimumSize(new java.awt.Dimension(400, 300));
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
                formWindowClosing(evt);
            }
        });

        pnlClouds.setLayout(new java.awt.GridBagLayout());

        btnGoogleDrive.setText("Google Drive");
        btnGoogleDrive.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnGoogleDriveActionPerformed(evt);
            }
        });
        pnlClouds.add(btnGoogleDrive, new java.awt.GridBagConstraints());

        getContentPane().add(pnlClouds, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing
        if (m_dialogs.isEmpty())
        {
            Tools.logit("PickCloudDialog.closing() dispose");
            dispose();
        }
    }//GEN-LAST:event_formWindowClosing

    private void btnGoogleDriveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnGoogleDriveActionPerformed
    {//GEN-HEADEREND:event_btnGoogleDriveActionPerformed
        GDriveDialog dialog = new GDriveDialog();
        showDialog(dialog);
    }//GEN-LAST:event_btnGoogleDriveActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGoogleDrive;
    private javax.swing.JPanel pnlClouds;
    // End of variables declaration//GEN-END:variables

    private void showDialog(AbstractJDialog dialog)
    {
        m_dialogs.add(dialog);

        dialog.addWindowListener(new WindowAdapter()
        {
            @Override
            public void windowClosed(WindowEvent evt)
            {
                Component component = evt.getComponent();

                // remove object from the watch list
                m_dialogs.remove(component);

                if (m_dialogs.isEmpty())
                {
                    Tools.logit("No more dialogs to monitor...");
                    PickCloudDialog.this.setVisible(true);
                }
            }
        });

        // hide me
        this.setVisible(false);

        // show the dialog
        dialog.runLater();
    }

}
