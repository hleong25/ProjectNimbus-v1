/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.leong.nimbus.gui;

import com.leong.nimbus.utils.Tools;
import java.awt.CardLayout;
import java.lang.reflect.InvocationTargetException;

/**
 *
 * @author henry
 */
public class MyFrame extends javax.swing.JFrame
{
    public static enum CloudType
    {
        GOOGLE_DRIVE,
    }

    private final Runnable m_run;

    private final static String CARD_GOOGLE_DRIVE = "Google Drive";

    /**
     * Creates new form MyFrame
     */
    public MyFrame()
    {
        initComponents();

        m_run = new Runnable()
        {
            @Override
            public void run()
            {
                do_run();
            }
        };
    }

    public static MyFrame setupMainPanel(CloudType type)
    {
        MyFrame frame = new MyFrame();

        switch (type)
        {
            case GOOGLE_DRIVE:
                frame.setTitle(CARD_GOOGLE_DRIVE);
                ((CardLayout)frame.pnlCards.getLayout()).show(frame.pnlCards, CARD_GOOGLE_DRIVE);
                break;

            default:
                return null;
        }

        return frame;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        pnlMain = new javax.swing.JPanel();
        pnlCards = new javax.swing.JPanel();
        pnlGoogleDrive = new com.leong.nimbus.clouds.google.drive.GDrivePanel();
        mnubar = new javax.swing.JMenuBar();
        mnuNimbus = new javax.swing.JMenu();
        mnuOpenNewCloud = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlMain.setMinimumSize(new java.awt.Dimension(400, 300));
        pnlMain.setPreferredSize(new java.awt.Dimension(400, 300));
        pnlMain.setLayout(new java.awt.BorderLayout());

        pnlCards.setLayout(new java.awt.CardLayout());
        pnlCards.add(pnlGoogleDrive, "Google Drive");

        pnlMain.add(pnlCards, java.awt.BorderLayout.CENTER);

        getContentPane().add(pnlMain, java.awt.BorderLayout.CENTER);

        mnuNimbus.setText("Nimbus");

        mnuOpenNewCloud.setText("Open New Cloud");
        mnuOpenNewCloud.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                mnuOpenNewCloudActionPerformed(evt);
            }
        });
        mnuNimbus.add(mnuOpenNewCloud);

        mnubar.add(mnuNimbus);

        setJMenuBar(mnubar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuOpenNewCloudActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_mnuOpenNewCloudActionPerformed
    {//GEN-HEADEREND:event_mnuOpenNewCloudActionPerformed
        PickCloudFrame.showMe();
    }//GEN-LAST:event_mnuOpenNewCloudActionPerformed

    @Override
    public void setTitle(String title)
    {
        final String APP_NAME = " - Nimbus";

        if (title.endsWith(APP_NAME))
            super.setTitle(title);
        else
            super.setTitle(title + APP_NAME);
    }

    public void runLater()
    {
        Tools.logit("MyFrame.runLater()");

        java.awt.EventQueue.invokeLater(m_run);
    }

    public void runAndWait()
    {
        try
        {
            Tools.logit("MyFrame.runAndWait() EventQueue.invokeAndWait(run)");
            java.awt.EventQueue.invokeAndWait(m_run);
        }
        catch (InterruptedException ex)
        {
            //Logger.getLogger(AbstractJDialog.class.getName()).log(Level.SEVERE, null, ex);
            Tools.logit("MyFrame.runAndWait() InterruptedException: "+ex.toString());
        }
        catch (InvocationTargetException ex)
        {
            //Logger.getLogger(AbstractJDialog.class.getName()).log(Level.SEVERE, null, ex);
            Tools.logit("MyFrame.runAndWait() InvocationTargetException: "+ex.toString());
        }
    }

    protected void do_run()
    {
        setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu mnuNimbus;
    private javax.swing.JMenuItem mnuOpenNewCloud;
    private javax.swing.JMenuBar mnubar;
    private javax.swing.JPanel pnlCards;
    private com.leong.nimbus.clouds.google.drive.GDrivePanel pnlGoogleDrive;
    private javax.swing.JPanel pnlMain;
    // End of variables declaration//GEN-END:variables
}
